version: '3.6'


services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 1
    networks:
      - swat-network

  kafka:
    image: 'bitnami/kafka:2.8.1'
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOSTNAME: localhost
      ALLOW_PLAINTEXT_LISTENER: 1
    networks:
      - swat-network
      
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    networks:
      - swat-network    
  
  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb_TIG
    restart: always
    environment:
      - INFLUXDB_DB=swat
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - swat-network

  grafana:
    image: grafana/grafana-oss:8.4.3
    container_name: grafana_TIG
    restart: always
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - swat-network

  #telegraf
  telegraf:
    image: telegraf
    container_name: telegraf_TIG
    restart: always
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '8125:8125'
    networks:
      - swat-network

  #chronograf
  chronograf:
    image: chronograf:latest
    hostname: chronograf
    container_name: chronograf
    ports:
      - 8080:8080
    links:
      - influxdb
    depends_on:
      - influxdb
    volumes:
      - chronograf:/var/lib/chronograf
    environment:
      - PORT=8080
    networks:
      - swat-network

  #pyspark
  pyspark:
    image: pyspark
    build: ./Spark
    container_name: pyspark
    ports:
      - 8888:8888
    volumes:
      - ./Pyspark/data:/data
    networks:
      - swat-network
      

      
networks:
  swat-network:
    
volumes:
  grafana_data: {}
  influxdb_data: {}
  chronograf: {}